name: Create Repo on Issue

on:
  issues:
    types: [labeled]

jobs:
  create-repo:
    if: ${{ github.event.label.name == 'Ongoing' }}
    runs-on: ubuntu-latest
    env:
      ORG_NAME: 'Epi-Stg-Hub'
      TEMPLATE_NAME: 'Template-Project'
      GH_TOKEN: ${{ secrets.ORG_ADMIN_TOKEN }}
      ISSUE_TITLE: ${{ github.event.issue.title }}
      ISSUE_NUMBER: ${{ github.event.issue.number }}
      ADMIN_NAME: '@Kaiwinta'

    steps:
      - name: Sanitize repo name
        id: vars
        run: |
          REPO_NAME=$(echo "$ISSUE_TITLE" | tr ' ' '-' | tr -cd '[:alnum:]-')
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      - name: Create repo from template
        id: create
        continue-on-error: true
        run: |
          gh repo create $ORG_NAME/$REPO_NAME \
            --private \
            --template "$ORG_NAME/$TEMPLATE_NAME" \
            --include-all-branches

      - name: Comment on failure
        if: steps.create.outcome == 'failure'
        run: |
          gh issue comment $ISSUE_NUMBER \
            --repo "$ORG_NAME/Config" \
            -b "ðŸš¨ An error occurred while creating the repo.\n\nAdmin attention required: $ADMIN_NAME"

  setup-team:
    if: ${{ github.event.label.name == 'Ongoing' }}
    runs-on: ubuntu-latest
    needs: create-repo
    env:
      GH_TOKEN: ${{ secrets.ORG_ADMIN_TOKEN }}
      ORG_NAME: 'Epi-Stg-Hub'
      ISSUE_TITLE: ${{ github.event.issue.title }}
      ASSIGNEES_JSON: ${{ toJson(github.event.issue.assignees) }}

    steps:
      - name: Sanitize team name
        id: team
        run: |
          TEAM_NAME=$(echo "$ISSUE_TITLE" | tr ' ' '-' | tr -cd '[:alnum:]-')
          echo "TEAM_NAME=$TEAM_NAME" >> $GITHUB_ENV

      - name: Create team
        run: |
          gh api --method POST \
            -H "Accept: application/vnd.github+json" \
            /orgs/$ORG_NAME/teams \
            -f name="$TEAM_NAME-team" \
            -f description="Team for $ISSUE_TITLE" || echo "Team might already exist."

      - name: Add assignees to team
        run: |
          echo "$ASSIGNEES_JSON" | jq -r '.[] | .login' | while read user; do
            echo "Adding $user to team..."
            gh api --method PUT \
              -H "Accept: application/vnd.github+json" \
              /orgs/$ORG_NAME/teams/$TEAM_NAME-team/memberships/$user
          done
